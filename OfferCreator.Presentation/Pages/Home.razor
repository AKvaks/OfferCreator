@page "/"
@using OfferCreator.Core.Models
@using OfferCreator.Core.Models.DTOs.Offers
@inject HttpClient Http

<PageTitle>Offers</PageTitle>

<h1>Offers</h1>
<br />
@if (pagedOffers is null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Offer number</th>
                <th>Date of offer</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var offer in pagedOffers.Items)
            {
                <tr>
                    <td>@offer.OfferNumber</td>
                    <td>@offer.DateOfOffer</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="table-buttons">
        <button class="btn btn-primary" type="button" @onclick="PreviousAsync" disabled="@(!pagedOffers.HasPreviousPage)">Previous</button>
        <span>@pagedOffers.PageNumber / @pagedOffers.TotalPages</span>
        <button class="btn btn-primary" type="button" @onclick="NextAsync" disabled="@(!pagedOffers.HasNextPage)">Next</button>
    </div>
}

@code {
    private PagedResponse<OfferListModel>? pagedOffers;

    private int pageNumber = 1;
    private const int pageSize = 3;

    protected override async Task OnInitializedAsync()
    {
        pagedOffers = await Http.GetFromJsonAsync<PagedResponse<OfferListModel>>(GetAllOffersPagedURL(pageNumber));
    }

    private async Task PreviousAsync()
    {
        if (pageNumber - 1 > 0)
        {
            pageNumber--;
            await OnPageNumberChange();
        }
    }

    private async Task NextAsync()
    {
        if (pageNumber + 1 <= pagedOffers?.TotalPages)
        {
            pageNumber++;
            await OnPageNumberChange();
        }
    }

    private async Task OnPageNumberChange()
    {
        pagedOffers = await Http.GetFromJsonAsync<PagedResponse<OfferListModel>>(GetAllOffersPagedURL(pageNumber));
        StateHasChanged();
    }

    private string GetAllOffersPagedURL(int pageNumber)
    {
        return "api/offer?pageNumber=" + $"{pageNumber}" + $"&pageSize={pageSize}";
    }
}

