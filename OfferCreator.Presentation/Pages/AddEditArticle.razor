@page "/articles/add-edit/{id:int?}"
@using OfferCreator.Core.Models.DTOs.Articles
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>@(Id != null ? "Edit Article" : "Add Article")</PageTitle>

<div class="page-title">
    <h1>@(Id != null ? "Edit Article" : "Add Article")</h1>
    <button class="btn btn-primary" type="button" @onclick="BackToArticles">
        Back
    </button>
</div>
<br />
<EditForm Model="article" OnValidSubmit="ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="ArticleName">Article name</label>
        <InputText id="ArticleName" @bind-Value="article.ArticleName" class="form-control"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary mb-5">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    string btnText = string.Empty;

    public ArticleModel article = new ArticleModel();

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            var response = await Http.GetFromJsonAsync<ArticleModel>(GetArticleUrl() + "/GetArticleById" + $"/{Id}");
            if (response is not null)
            {
                article = response;
                btnText = "Save changes";
            }
            else
            {
                btnText = "Save";
            }
        }
        else
        {
            btnText = "Save";
        }
    }

    private void BackToArticles()
    {
        NavigationManager.NavigateTo("/articles");
    }

    private async Task ValidSubmit()
    {
        if (Id != null)
        {
            HttpResponseMessage response = await Http.PutAsJsonAsync(GetArticleUrl() + "/UpdateArticle", article);
            if (response.IsSuccessStatusCode)
            {
                // Handle success
                var result = await response.Content.ReadFromJsonAsync<int>();
                NavigationManager.NavigateTo("/articles");
            }
            else
            {
                // Handle failure
                Console.WriteLine("Failed to post data.");
            }
        }
        else
        {
            HttpResponseMessage response = await Http.PostAsJsonAsync(GetArticleUrl() + "/AddArticle", article);
            if (response.IsSuccessStatusCode)
            {
                // Handle success
                var result = await response.Content.ReadFromJsonAsync<int>();
                NavigationManager.NavigateTo("/articles");
            }
            else
            {
                // Handle failure
                Console.WriteLine("Failed to post data.");
            }
        }
    }

    private string GetArticleUrl()
    {
        return "/api/article";
    }
}

